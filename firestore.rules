rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId && !('role' in request.resource.data && !('role' in resource.data));
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    match /goals/{userId}/items/{goalId} {
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
      allow write: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
    }

    match /student_profiles/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
    }

    match /student_private/{userId} {
      allow read: if request.auth != null && request.auth.token.role == 'admin';
      allow write: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
    }

    match /audit_logs/{logId} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }
  }
}
